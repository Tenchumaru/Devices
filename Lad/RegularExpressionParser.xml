<?xml version="1.0" encoding="utf-8" ?>
<grammar>
	<symbols>
		<literal value="{" associativity="left" />
		<nonterminal name="rx" type="Nfa" />
		<nonterminal name="slash" type="Nfa" />
		<nonterminal name="choice" type="Nfa" />
		<nonterminal name="concat" type="Nfa" />
		<nonterminal name="kleene" type="Nfa" />
		<nonterminal name="simple" type="Nfa" />
		<nonterminal name="class" type="RangeSymbol" />
		<nonterminal name="initialRange" type="RangeSymbol" />
		<nonterminal name="finalRange" type="RangeSymbol" />
		<nonterminal name="range" type="RangeSymbol" />
		<nonterminal name="ranges" type="RangeSymbol" />
		<terminal name="Number" type="int" />
		<terminal name="Symbol" type="char" />
		<terminal name="Identifier" type="string" />
		<terminal name="NE" />
		<terminal name="OSBC" />
	</symbols>
	<rules>
		<rule name="rx">
			<action />
		</rule>
		<rule name="rx">
			<nonterminal name="slash" />
			<action><![CDATA[result = $1;]]></action>
		</rule>
		<rule name="rx">
			<literal value="^" />
			<nonterminal name="slash" />
			<action><![CDATA[result = new Nfa(BolSymbol.Value) + $2;]]></action>
		</rule>
		<rule name="rx">
			<nonterminal name="slash" />
			<literal value="$" />
			<action><![CDATA[result = $1 / parameters.NewLineNfa;]]></action>
		</rule>
		<rule name="rx">
			<literal value="^" />
			<nonterminal name="slash" />
			<literal value="$" />
			<action><![CDATA[result = (new Nfa(BolSymbol.Value) + $2) / parameters.NewLineNfa;]]></action>
		</rule>
		<rule name="slash">
			<nonterminal name="choice" />
		</rule>
		<rule name="slash">
			<nonterminal name="choice" />
			<literal value="/" />
			<nonterminal name="choice" />
			<action><![CDATA[$$ = $1 / $3;]]></action>
		</rule>
		<rule name="choice">
			<nonterminal name="concat" />
		</rule>
		<rule name="choice">
			<nonterminal name="choice" />
			<literal value="|" />
			<nonterminal name="concat" />
			<action><![CDATA[$$ = $1 | $3;]]></action>
		</rule>
		<rule name="concat">
			<nonterminal name="kleene" />
		</rule>
		<rule name="concat">
			<nonterminal name="concat" />
			<nonterminal name="kleene" />
			<action><![CDATA[$$ = $1 + $2;]]></action>
		</rule>
		<rule name="kleene">
			<nonterminal name="simple" />
		</rule>
		<rule name="kleene">
			<nonterminal name="simple" />
			<literal value="*" />
			<action><![CDATA[$$ = $1.Kleene();]]></action>
		</rule>
		<rule name="kleene">
			<nonterminal name="simple" />
			<literal value="+" />
			<action><![CDATA[$$ = $1.Plus();]]></action>
		</rule>
		<rule name="kleene">
			<nonterminal name="simple" />
			<literal value="?" />
			<action><![CDATA[$$ = $1.Question();]]></action>
		</rule>
		<rule name="kleene">
			<nonterminal name="simple" />
			<literal value="{" />
			<terminal name="Number" />
			<literal value="}" />
			<action><![CDATA[$$ = $1.Count($3);]]></action>
		</rule>
		<rule name="kleene">
			<nonterminal name="simple" />
			<literal value="{" />
			<literal value="," />
			<terminal name="Number" />
			<literal value="}" />
			<action><![CDATA[if(!ValidateKleeneCount(0, $4)) return false; $$ = $1.Count(0, $4);]]></action>
		</rule>
		<rule name="kleene">
			<nonterminal name="simple" />
			<literal value="{" />
			<terminal name="Number" />
			<literal value="," />
			<terminal name="Number" />
			<literal value="}" />
			<action><![CDATA[if(!ValidateKleeneCount($3, $5)) return false; $$ = $1.Count($3, $5);]]></action>
		</rule>
		<rule name="simple">
			<terminal name="Symbol" />
			<action><![CDATA[$$ = new Nfa(new SimpleSymbol($1));]]></action>
		</rule>
		<rule name="simple">
			<literal value="." />
			<action><![CDATA[$$ = parameters.DotIncludesNewLine ? new Nfa(AnySymbol.Value) : MakeAnyNfaWithoutNewLine();]]></action>
		</rule>
		<rule name="simple">
			<terminal name="NE" />
			<terminal name="Identifier" />
			<literal value="}" />
			<action><![CDATA[$$ = FindNamedExpression($2); if($$ == null) return false;]]></action>
		</rule>
		<rule name="simple">
			<literal value="[" />
			<nonterminal name="class" />
			<literal value="]" />
			<action><![CDATA[$$ = new Nfa($2);]]></action>
		</rule>
		<rule name="simple">
			<terminal name="OSBC" />
			<nonterminal name="class" />
			<literal value="]" />
			<action><![CDATA[$$ = new Nfa(~$2);]]></action>
		</rule>
		<rule name="simple">
			<literal value="(" />
			<nonterminal name="choice" />
			<literal value=")" />
			<action><![CDATA[$$ = $2;]]></action>
		</rule>
		<rule name="class">
			<nonterminal name="initialRange" />
			<nonterminal name="ranges" />
			<nonterminal name="finalRange" />
			<action><![CDATA[$$ = new[] { $1, $2, $3 }.Where(r => r != null).Aggregate((l, r) => l + r);]]></action>
		</rule>
		<rule name="initialRange">
			<action><![CDATA[$$ = null;]]></action>
		</rule>
		<rule name="initialRange">
			<literal value="-" />
			<terminal name="Symbol" />
			<action><![CDATA[$$ = new RangeSymbol(char.MinValue, $2);]]></action>
		</rule>
		<rule name="finalRange">
			<action><![CDATA[$$ = null;]]></action>
		</rule>
		<rule name="finalRange">
			<terminal name="Symbol" />
			<literal value="-" />
			<action><![CDATA[$$ = new RangeSymbol($1, char.MaxValue);]]></action>
		</rule>
		<rule name="ranges">
			<action><![CDATA[$$ = null;]]></action>
		</rule>
		<rule name="ranges">
			<nonterminal name="ranges" />
			<nonterminal name="range" />
			<action><![CDATA[$$ = $1 == null ? $2 : $1 + $2;]]></action>
		</rule>
		<rule name="range">
			<terminal name="Symbol" />
			<action><![CDATA[$$ = new RangeSymbol($1);]]></action>
		</rule>
		<rule name="range">
			<terminal name="Symbol" />
			<literal value="-" />
			<terminal name="Symbol" />
			<action><![CDATA[$$ = new RangeSymbol($1, $3);]]></action>
		</rule>
	</rules>
</grammar>
